{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","tBody","tBodies","container","rows","cells","appendRow","removeRow","removeCol","appendCol","evalSize","property","addButton","removeButton","length","disabled","addEventListener","e","elem","target","lastRow","append","cloneNode","remove","forEach","row","clone","lastElementChild"],"mappings":";AAAA,aA2DC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAzDD,IAAMA,EAAQC,SAASC,cAAc,UAC/BC,EAAQH,EAAMI,QAAQ,GACtBC,EAAYJ,SAASC,cAAc,cACnCI,EAAON,EAAMM,KACbC,EAAQ,EAAID,GAAM,GAAGC,MAErBC,EAAYP,SAASC,cAAc,eACnCO,EAAYR,SAASC,cAAc,eACnCQ,EAAYT,SAASC,cAAc,kBACnCS,EAAYV,SAASC,cAAc,kBAuCzC,SAASU,EAASC,EAAUC,EAAWC,GACb,IAApBF,EAASG,OACXD,EAAaE,UAAW,EACK,KAApBJ,EAASG,OAClBF,EAAUG,UAAW,GAErBH,EAAUG,UAAW,EACrBF,EAAaE,UAAW,GA5C5BZ,EAAUa,iBAAiB,QAAS,SAACC,GAC7BC,IAAAA,EAAOD,EAAEE,OACTC,EAAUtB,EAAMM,KAAKN,EAAMM,KAAKU,OAAS,GAEvC,QAAA,GACAI,KAAAA,IAASZ,IAAcA,EAAUS,SACrCd,EAAMoB,OAAOD,EAAQE,WAAU,IAE/BZ,EAASN,EAAME,EAAWC,GAC1B,MAEIW,KAAAA,IAASX,EACba,EAAQG,SAERb,EAASN,EAAME,EAAWC,GAC1B,MAEIW,KAAAA,IAAST,IAAcA,EAAUM,SACjCX,EAAAA,GAAMoB,QAAQ,SAAAC,GACVC,IAAAA,EAAQD,EAAIE,iBAAiBL,WAAU,GAE7CG,EAAIJ,OAAOK,KAGbhB,EAASL,EAAOI,EAAWD,GAC3B,MAEIU,KAAAA,IAASV,EACTJ,EAAAA,GAAMoB,QAAQ,SAAAC,GAChBA,EAAIE,iBAAiBJ,WAGvBb,EAASL,EAAOI,EAAWD","file":"main.f90941ee.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('.field');\nconst tBody = table.tBodies[0];\nconst container = document.querySelector('.container');\nconst rows = table.rows;\nconst cells = [...rows][0].cells;\n\nconst appendRow = document.querySelector('.append-row');\nconst removeRow = document.querySelector('.remove-row');\nconst removeCol = document.querySelector('.remove-column');\nconst appendCol = document.querySelector('.append-column');\n\ncontainer.addEventListener('click', (e) => {\n  const elem = e.target;\n  const lastRow = table.rows[table.rows.length - 1];\n\n  switch (true) {\n    case (elem === appendRow && !appendRow.disabled) :\n      tBody.append(lastRow.cloneNode(true));\n\n      evalSize(rows, appendRow, removeRow);\n      break;\n\n    case (elem === removeRow) :\n      lastRow.remove();\n\n      evalSize(rows, appendRow, removeRow);\n      break;\n\n    case (elem === appendCol && !appendCol.disabled) :\n      [...rows].forEach(row => {\n        const clone = row.lastElementChild.cloneNode(true);\n\n        row.append(clone);\n      });\n\n      evalSize(cells, appendCol, removeCol);\n      break;\n\n    case (elem === removeCol) :\n      [...rows].forEach(row => {\n        row.lastElementChild.remove();\n      });\n\n      evalSize(cells, appendCol, removeCol);\n      break;\n  }\n});\n\nfunction evalSize(property, addButton, removeButton) {\n  if (property.length === 2) {\n    removeButton.disabled = true;\n  } else if (property.length === 10) {\n    addButton.disabled = true;\n  } else {\n    addButton.disabled = false;\n    removeButton.disabled = false;\n  }\n}\n"]}